let User;_cb4‍.x([["register",()=>register]]);_cb4‍.w("../models/user",[["default",["User"],function(v){User=v}]]);

       const register = async (req, res) => {
    _cb4‍.g.console.log(req.body);
    const { name, email, password } = req.body;
    // validation 
    if(!name) return res.status(400).send('Name is required');
    if(!password || password.length < 6) 
     return res
         .status(400)
         .send('Password is required and should be min 6 characters long') 
    let userExist = await User.findOne({email}).exec();
    if (userExist) return res.status(400).send('Email is already in use');
    // register 
    const user = new User(req.body);
    try {
        await user.save();
        _cb4‍.g.console.log('USER CREATED', user);
        return res.json({ ok: true });
    } catch (err) {
        _cb4‍.g.console.log('CREATE USER FAILED', err);
        return res.status(400).send('Error. Please try again.');
    }
        };

